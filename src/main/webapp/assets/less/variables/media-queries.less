//== Media queries breakpoints
//
//## Define the breakpoints at which your layout will change, adapting to different screen sizes.
// @screen-xsmall:    ~"only screen and (min-width: 320px) and (max-width: 767px) and (max-device-width: 767px)";
// @screen-med:       ~"only screen and (min-device-width: 768px)";
// @screen-xsmall-landscape:    ~"only screen and (min-width: 480px) and (max-width: 767px)";


// TODO: Get rid of all of these, we do not need them for our use case
// Extra small screen / phone
// @screen-xs:                  480px;
@screen-xs:                  320px;
@screen-xs-min:              @screen-xs;
@screen-phone:               @screen-xs-min;

@screen-sm-phone:            480px;

// Small screen / tablet
// Note: Deprecated @screen-sm and @screen-tablet as of v3.0.1
@screen-sm:                  768px;
@screen-sm-min:              @screen-sm;
@screen-tablet:              @screen-sm-min;

// Medium screen / desktop - breakpoints
// Note: Deprecated @screen-md and @screen-desktop as of v3.0.1
@screen-md:                  1024px;
@screen-md-min:              @screen-md;
@screen-desktop:             @screen-md-min;

// Large screen / wide desktop - breakpoints
// Note: Deprecated @screen-lg and @screen-lg-desktop as of v3.0.1
@screen-lg:                  1270px;
@screen-lg-min:              @screen-lg;
@screen-lg-desktop:          @screen-lg-min;

// So media queries don't overlap when required, provide a maximum
@screen-xs-max:              (@screen-sm-min - 1);
@screen-sm-max:              (@screen-md-min - 1);
@screen-md-max:              (@screen-lg-min - 1);

// Here are some helper media queries that allow you to write shorthand LESS throughout elements/objects/pages
// Best practice should be to write your original styles for the xsmall screen and allow your items to scale as much
// as possible. Then if you need to add extra styles because of the wider screens, add in extra items or code in the
// expanstion through these three media queries. Note that these do not have max widths, so they scale
// If once you get to "small" screen, your object looks the same, you don't need further breakpoints. Just define
// the object using the @mq-sm breakpoint and it will look like that for all the bigger breakpoints
@mq-sm:                 ~"only screen and (min-width: @{screen-xs-min})";
@mq-md:                 ~"only screen and (min-width: @{screen-sm-min})";
@mq-lg:                 ~"only screen and (min-width: @{screen-md-min})";

// There are instances where we will need to specify handling only in certain breakpoints. Rather than being the best
// practice, this should be the exception case. These helpers will give you the ability to target only specific
// screen sizes and nothing else

//767
@mq-only-small-mobile:      ~"only screen and (max-width: 479px)";
@mq-only-mobile:            ~"only screen and (max-width: @{screen-xs-max})";
//768 & 1023
@mq-only-tablet:            ~"only screen and (min-width: @{screen-sm-min}) and (max-width: @{screen-sm-max})";
//1024 & 1479
@mq-only-desktop:           ~"only screen and (min-width: @{screen-md-min}) and (max-width: @{screen-md-max})";
//1480
@mq-only-lg:                ~"only screen and (min-width: @{screen-lg-min})";

// === Grid ===

// Padding between columns. Gets divided in half for the left and right.
@grid-gutter-mobile:    20px;
@grid-gutter-width:     30px;
@gutter-mobile:         10px;

// Small screen / tablet site width
// This is between @screen-sm-min and @screen-md-min widths
@container-tablet:      (710px + @grid-gutter-mobile);

// Medium screen / desktop
// This is between @screen-md-min and @screen-lg-min widths
@container-desktop:     (960px + @grid-gutter-width);

// Large screen / wide desktop
// If you would like to eliminate this because the designs do not warrant it, just change this to the @container-desktop value
// @container-large-desktop:      (@container-desktop + @grid-gutter-width);
@container-large-desktop: (1200px + @grid-gutter-width);

@container-narrow:     (710px + @grid-gutter-mobile);